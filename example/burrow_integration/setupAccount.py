import os
import binascii
from iroha import IrohaCrypto, Iroha, IrohaGrpc, primitive_pb2
from functools import wraps
import integration_helpers

IROHA_HOST_ADDR = os.getenv("IROHA_HOST_ADDR", "127.0.0.1")
IROHA_PORT = os.getenv("IROHA_PORT", "50051")

net = IrohaGrpc(f"{IROHA_HOST_ADDR}:{IROHA_PORT}")

ADMIN_ACCOUNT_ID = os.getenv("ADMIN_ACCOUNT_ID", "admin@test")
ADMIN_PRIVATE_KEY = os.getenv(
    "ADMIN_PRIVATE_KEY",
    "f101537e319568c765b2cc89698325604991dca57b9716b58016b253506cab70",
)
iroha_admin = Iroha(ADMIN_ACCOUNT_ID)


DOMAIN = "test"


user_account_short_id = "newly_registered"
user_account_full_id = f"{user_account_short_id}@{DOMAIN}"
user_private_key = "1234567890123456789012345678901234567890123456789012345678901234"
user_public_key = IrohaCrypto.derive_public_key(user_private_key).decode("utf-8")

user_private_key_extra = (
    "abcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcd"
)
user_public_key_extra = IrohaCrypto.derive_public_key(user_private_key_extra).decode(
    "utf-8"
)
user_mail = "john@hyperledger.com"

ASSET_ID = f"lemurcoin#{DOMAIN}"


@integration_helpers.trace
def create_and_setup_account(contract_address: str):
    params = integration_helpers.get_first_four_bytes_of_keccak(
        b"createAndSetupAccount(string,string,string,string,string,string,string,string,string,string)"
    )
    no_of_param = 10
    for x in range(no_of_param):
        params = params + integration_helpers.left_padded_address_of_param(
            x, no_of_param
        )
    params = params + integration_helpers.argument_encoding(
        ADMIN_ACCOUNT_ID
    )  # admin account id
    params = params + integration_helpers.argument_encoding(
        user_account_short_id
    )  # user account name
    params = params + integration_helpers.argument_encoding(
        user_account_full_id
    )  #  user account id
    params = params + integration_helpers.argument_encoding(ASSET_ID)  #  asset id
    params = params + integration_helpers.argument_encoding(DOMAIN)  #  domain name
    params = params + integration_helpers.argument_encoding(
        "set up balance"
    )  #  description
    params = params + integration_helpers.argument_encoding("100")  #  amount
    params = params + integration_helpers.argument_encoding(
        "mail"
    )  #  key for user detail
    params = params + integration_helpers.argument_encoding(
        user_mail
    )  #  value for user detail
    params = params + integration_helpers.argument_encoding(
        user_public_key
    )  #  public key of user
    tx = iroha_admin.transaction(
        [
            iroha_admin.command(
                "CallEngine",
                caller=ADMIN_ACCOUNT_ID,
                callee=contract_address,
                input=params,
            )
        ]
    )
    IrohaCrypto.sign_transaction(tx, ADMIN_PRIVATE_KEY)
    response = net.send_tx(tx)
    for status in net.tx_status_stream(tx):
        print(status)


@integration_helpers.trace
def create_contract():
    bytecode = "608060405234801561001057600080fd5b5073a6abc17819738299b3b2c1ce46d55c74f04e290c6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611bc0806100746000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a28abc6e11610071578063a28abc6e1461018c578063b7d66df7146101bc578063bc53c0c4146101ec578063cd5286d01461021c578063d4e804ab1461024c578063de58d1561461026a576100a9565b80632c74aaaf146100ae57806337410dfa146100de5780634bb8f5f51461010e5780635bdb3a411461013e57806395256b2c1461015c575b600080fd5b6100c860048036038101906100c391906112b7565b61029a565b6040516100d591906117e6565b60405180910390f35b6100f860048036038101906100f391906112b7565b610409565b60405161010591906117e6565b60405180910390f35b610128600480360381019061012391906114a9565b6105c5565b60405161013591906117e6565b60405180910390f35b6101466105fe565b60405161015391906117e6565b60405180910390f35b610176600480360381019061017191906113ba565b61075d565b60405161018391906117e6565b60405180910390f35b6101a660048036038101906101a191906112b7565b610938565b6040516101b391906117e6565b60405180910390f35b6101d660048036038101906101d19190611323565b610af4565b6040516101e391906117e6565b60405180910390f35b61020660048036038101906102019190611323565b610cd4565b60405161021391906117e6565b60405180910390f35b61023660048036038101906102319190611276565b610e9e565b60405161024391906117e6565b60405180910390f35b61025461100a565b60405161026191906117cb565b60405180910390f35b610284600480360381019061027f9190611323565b61102e565b60405161029191906117e6565b60405180910390f35b6060600083836040516024016102b192919061182a565b6040516020818303038152906040527f260b5d52000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1683604051610378919061179d565b600060405180830381855af49150503d80600081146103b3576040519150601f19603f3d011682016040523d82523d6000602084013e6103b8565b606091505b5091509150816103fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f490611943565b60405180910390fd5b80935050505092915050565b60606000838360405160240161042092919061182a565b6040516020818303038152906040527f37410dfa000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16836040516104e7919061179d565b600060405180830381855af49150503d8060008114610522576040519150601f19603f3d011682016040523d82523d6000602084013e610527565b606091505b50915091508161056c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056390611923565b60405180910390fd5b8560405161057a91906117b4565b60405180910390207fa6f5bb79d2e3abb706e921433d10213c20741696fef51dd4153f5dc73d9e4d00866040516105b19190611808565b60405180910390a280935050505092915050565b60606105d28a8884610cd4565b90506105e18b8a8a898961075d565b90506105ee898585610af4565b90509a9950505050505050505050565b606060006040516024016040516020818303038152906040527f5bdb3a41000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16836040516106cf919061179d565b600060405180830381855af49150503d806000811461070a576040519150601f19603f3d011682016040523d82523d6000602084013e61070f565b606091505b509150915081610754576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074b90611923565b60405180910390fd5b80935050505090565b60606000868686868660405160240161077a9594939291906118ad565b6040516020818303038152906040527f95256b2c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1683604051610841919061179d565b600060405180830381855af49150503d806000811461087c576040519150601f19603f3d011682016040523d82523d6000602084013e610881565b606091505b5091509150816108c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108bd90611923565b60405180910390fd5b876040516108d491906117b4565b6040518091039020896040516108ea91906117b4565b60405180910390207f6a739057159b3f3e2efcba00d44b0fa47de56972ed8776a2da7682bcf7c67de1876040516109219190611808565b60405180910390a380935050505095945050505050565b60606000838360405160240161094f92919061182a565b6040516020818303038152906040527fa28abc6e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1683604051610a16919061179d565b600060405180830381855af49150503d8060008114610a51576040519150601f19603f3d011682016040523d82523d6000602084013e610a56565b606091505b509150915081610a9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9290611923565b60405180910390fd5b85604051610aa991906117b4565b60405180910390207f10eebd74a1bfcec9b2e208fad2742f3ce9fde2f1ff95b30db42e2bc6b6b713e386604051610ae09190611808565b60405180910390a280935050505092915050565b60606000848484604051602401610b0d93929190611861565b6040516020818303038152906040527fb7d66df7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1683604051610bd4919061179d565b600060405180830381855af49150503d8060008114610c0f576040519150601f19603f3d011682016040523d82523d6000602084013e610c14565b606091505b509150915081610c59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5090611923565b60405180910390fd5b84604051610c6791906117b4565b604051809103902086604051610c7d91906117b4565b604051809103902088604051610c9391906117b4565b60405180910390207f5e1b38cd47cf21b75d5051af29fa321eedd94877db5ac62067a076770eddc9d060405160405180910390a48093505050509392505050565b60606000848484604051602401610ced93929190611861565b6040516020818303038152906040527fbc53c0c4000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1683604051610db4919061179d565b600060405180830381855af49150503d8060008114610def576040519150601f19603f3d011682016040523d82523d6000602084013e610df4565b606091505b509150915081610e39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3090611923565b60405180910390fd5b85604051610e4791906117b4565b604051809103902087604051610e5d91906117b4565b60405180910390207f2681f9ea8419cbc4844760d23371ce7e9bd5686e78f2a7988ff6e8430abd39b860405160405180910390a38093505050509392505050565b6060600082604051602401610eb39190611808565b6040516020818303038152906040527fcd5286d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1683604051610f7a919061179d565b600060405180830381855af49150503d8060008114610fb5576040519150601f19603f3d011682016040523d82523d6000602084013e610fba565b606091505b509150915081610fff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff690611923565b60405180910390fd5b809350505050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600084848460405160240161104793929190611861565b6040516020818303038152906040527fde58d156000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168360405161110e919061179d565b600060405180830381855af49150503d8060008114611149576040519150601f19603f3d011682016040523d82523d6000602084013e61114e565b606091505b509150915081611193576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118a90611923565b60405180910390fd5b846040516111a191906117b4565b6040518091039020866040516111b791906117b4565b6040518091039020886040516111cd91906117b4565b60405180910390207fe5ab145c34a2b2599d0b309bd4b0141f99353ee85ae41cf5afb5761105b177a860405160405180910390a48093505050509392505050565b600061122161121c84611988565b611963565b90508281526020810184848401111561123957600080fd5b611244848285611a39565b509392505050565b600082601f83011261125d57600080fd5b813561126d84826020860161120e565b91505092915050565b60006020828403121561128857600080fd5b600082013567ffffffffffffffff8111156112a257600080fd5b6112ae8482850161124c565b91505092915050565b600080604083850312156112ca57600080fd5b600083013567ffffffffffffffff8111156112e457600080fd5b6112f08582860161124c565b925050602083013567ffffffffffffffff81111561130d57600080fd5b6113198582860161124c565b9150509250929050565b60008060006060848603121561133857600080fd5b600084013567ffffffffffffffff81111561135257600080fd5b61135e8682870161124c565b935050602084013567ffffffffffffffff81111561137b57600080fd5b6113878682870161124c565b925050604084013567ffffffffffffffff8111156113a457600080fd5b6113b08682870161124c565b9150509250925092565b600080600080600060a086880312156113d257600080fd5b600086013567ffffffffffffffff8111156113ec57600080fd5b6113f88882890161124c565b955050602086013567ffffffffffffffff81111561141557600080fd5b6114218882890161124c565b945050604086013567ffffffffffffffff81111561143e57600080fd5b61144a8882890161124c565b935050606086013567ffffffffffffffff81111561146757600080fd5b6114738882890161124c565b925050608086013567ffffffffffffffff81111561149057600080fd5b61149c8882890161124c565b9150509295509295909350565b6000806000806000806000806000806101408b8d0312156114c957600080fd5b60008b013567ffffffffffffffff8111156114e357600080fd5b6114ef8d828e0161124c565b9a505060208b013567ffffffffffffffff81111561150c57600080fd5b6115188d828e0161124c565b99505060408b013567ffffffffffffffff81111561153557600080fd5b6115418d828e0161124c565b98505060608b013567ffffffffffffffff81111561155e57600080fd5b61156a8d828e0161124c565b97505060808b013567ffffffffffffffff81111561158757600080fd5b6115938d828e0161124c565b96505060a08b013567ffffffffffffffff8111156115b057600080fd5b6115bc8d828e0161124c565b95505060c08b013567ffffffffffffffff8111156115d957600080fd5b6115e58d828e0161124c565b94505060e08b013567ffffffffffffffff81111561160257600080fd5b61160e8d828e0161124c565b9350506101008b013567ffffffffffffffff81111561162c57600080fd5b6116388d828e0161124c565b9250506101208b013567ffffffffffffffff81111561165657600080fd5b6116628d828e0161124c565b9150509295989b9194979a5092959850565b61167d81611a07565b82525050565b600061168e826119b9565b61169881856119cf565b93506116a8818560208601611a48565b6116b181611adb565b840191505092915050565b60006116c7826119b9565b6116d181856119e0565b93506116e1818560208601611a48565b80840191505092915050565b60006116f8826119c4565b61170281856119eb565b9350611712818560208601611a48565b61171b81611adb565b840191505092915050565b6000611731826119c4565b61173b81856119fc565b935061174b818560208601611a48565b80840191505092915050565b60006117646027836119eb565b915061176f82611aec565b604082019050919050565b60006117876028836119eb565b915061179282611b3b565b604082019050919050565b60006117a982846116bc565b915081905092915050565b60006117c08284611726565b915081905092915050565b60006020820190506117e06000830184611674565b92915050565b600060208201905081810360008301526118008184611683565b905092915050565b6000602082019050818103600083015261182281846116ed565b905092915050565b6000604082019050818103600083015261184481856116ed565b9050818103602083015261185881846116ed565b90509392505050565b6000606082019050818103600083015261187b81866116ed565b9050818103602083015261188f81856116ed565b905081810360408301526118a381846116ed565b9050949350505050565b600060a08201905081810360008301526118c781886116ed565b905081810360208301526118db81876116ed565b905081810360408301526118ef81866116ed565b9050818103606083015261190381856116ed565b9050818103608083015261191781846116ed565b90509695505050505050565b6000602082019050818103600083015261193c81611757565b9050919050565b6000602082019050818103600083015261195c8161177a565b9050919050565b600061196d61197e565b90506119798282611a7b565b919050565b6000604051905090565b600067ffffffffffffffff8211156119a3576119a2611aac565b5b6119ac82611adb565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000611a1282611a19565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015611a66578082015181840152602081019050611a4b565b83811115611a75576000848401525b50505050565b611a8482611adb565b810181811067ffffffffffffffff82111715611aa357611aa2611aac565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4572726f722063616c6c696e67207365727669636520636f6e7472616374206660008201527f756e6374696f6e00000000000000000000000000000000000000000000000000602082015250565b7f4572726f722063616c6c696e67207365727669636520636f6e7472616374206660008201527f756e6374696f6e2000000000000000000000000000000000000000000000000060208201525056fea26469706673582212205d83489884333ef964fdae839d2b5749acb58dcb8d60fdf5f1bb7f9ee6cf6eb164736f6c63430008040033"
    """Bytecode was generated using remix editor  https://remix.ethereum.org/ from file setupAccount.sol. """
    tx = iroha_admin.transaction(
        [iroha_admin.command("CallEngine", caller=ADMIN_ACCOUNT_ID, input=bytecode)]
    )
    IrohaCrypto.sign_transaction(tx, ADMIN_PRIVATE_KEY)
    net.send_tx(tx)
    hex_hash = binascii.hexlify(IrohaCrypto.hash(tx))
    for status in net.tx_status_stream(tx):
        print(status)
    return hex_hash


@integration_helpers.trace
def create_asset(contract_address: str, asset_id: str):
    asset, domain = asset_id.split("#")
    params = integration_helpers.get_first_four_bytes_of_keccak(
        b"createAsset(string,string,string)"
    )
    no_of_param = 3
    for x in range(no_of_param):
        params = params + integration_helpers.left_padded_address_of_param(
            x, no_of_param
        )
    params = params + integration_helpers.argument_encoding(asset)  # asset id
    params = params + integration_helpers.argument_encoding(domain)  # domain name
    params = params + integration_helpers.argument_encoding("4")  #  precision
    tx = iroha_admin.transaction(
        [
            iroha_admin.command(
                "CallEngine",
                caller=ADMIN_ACCOUNT_ID,
                callee=contract_address,
                input=params,
            )
        ]
    )
    IrohaCrypto.sign_transaction(tx, ADMIN_PRIVATE_KEY)
    response = net.send_tx(tx)
    for status in net.tx_status_stream(tx):
        print(status)


@integration_helpers.trace
def admin_creates_assets(contract_address: str, asset_id: str, amount: str):
    params = integration_helpers.get_first_four_bytes_of_keccak(
        b"addAsset(string,string)"
    )
    no_of_param = 2
    for x in range(no_of_param):
        params = params + integration_helpers.left_padded_address_of_param(
            x, no_of_param
        )
    params = params + integration_helpers.argument_encoding(asset_id)  # asset id
    params = params + integration_helpers.argument_encoding(amount)  # amount of asset
    tx = iroha_admin.transaction(
        [
            iroha_admin.command(
                "CallEngine",
                caller=ADMIN_ACCOUNT_ID,
                callee=contract_address,
                input=params,
            )
        ]
    )
    IrohaCrypto.sign_transaction(tx, ADMIN_PRIVATE_KEY)
    response = net.send_tx(tx)
    for status in net.tx_status_stream(tx):
        print(status)


def print_paragraph(text: str):
    print(10 * "-", text, ":", 10 * "-")


@integration_helpers.trace
def get_account_details(contract_address: str, user_account: str):
    iroha_user = Iroha(user_account)
    params = integration_helpers.get_first_four_bytes_of_keccak(b"getAccountDetail()")
    no_of_param = 0
    tx = iroha_user.transaction(
        [
            iroha_user.command(
                "CallEngine", caller=user_account, callee=contract_address, input=params
            )
        ]
    )
    IrohaCrypto.sign_transaction(tx, user_private_key)
    response = net.send_tx(tx)
    for status in net.tx_status_stream(tx):
        print(status)
    hex_hash = binascii.hexlify(IrohaCrypto.hash(tx))
    return hex_hash


@integration_helpers.trace
def balance(address: str, user_id: str):
    params = integration_helpers.get_first_four_bytes_of_keccak(
        b"queryBalance(string,string)"
    )
    no_of_param = 2
    for x in range(no_of_param):
        params = params + integration_helpers.left_padded_address_of_param(
            x, no_of_param
        )
    params = params + integration_helpers.argument_encoding(user_id)  # account id
    params = params + integration_helpers.argument_encoding(ASSET_ID)  # asset id
    tx = iroha_admin.transaction(
        [
            iroha_admin.command(
                "CallEngine", caller=ADMIN_ACCOUNT_ID, callee=address, input=params
            )
        ]
    )
    IrohaCrypto.sign_transaction(tx, ADMIN_PRIVATE_KEY)
    response = net.send_tx(tx)
    for status in net.tx_status_stream(tx):
        print(status)
    hex_hash = binascii.hexlify(IrohaCrypto.hash(tx))
    return hex_hash


if __name__ == "__main__":
    print_paragraph("Preparation")
    hash = create_contract()
    address = integration_helpers.get_engine_receipts_address(hash)
    create_asset(address, ASSET_ID)
    admin_creates_assets(address, ASSET_ID, "10000")

    print_paragraph("Creating account")
    create_and_setup_account(address)

    print_paragraph("Checking account")
    hash = get_account_details(address, user_account_full_id)
    integration_helpers.get_engine_receipts_result(hash)
    hash = balance(address, user_account_full_id)
    integration_helpers.get_engine_receipts_result(hash)
